<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.Version">

	<resultMap id="Base_Result_Model" type="com.zed.domain.version.version.Version">
		<id column="version_id" property="versionId"/> 
		<result column="status" property="status"/>	
		<result column="create_time" property="createTime"/>	
		<result column="update_time" property="updateTime"/>	
		<result column="creater" property="creater"/>	
		<result column="editer" property="editer"/>	
		<result column="version_code" property="versionCode"/>	
		<result column="system_type" property="systemType"/>	
		<result column="download_url" property="downloadUrl"/>	
		<result column="description" property="description"/>	
		<result column="origin" property="origin"/>	
		<result column="is_must" property="isMust"/>	
		<result column="MD5" property="md5"/>	
		<result column="appType" property="appType"/>	
		<result column="packagename" property="packageName"/>	
		<result column="channel" property="channel"/>	
	</resultMap>
	
	<resultMap type="HashMap" id="Base_Result_HashMap"></resultMap>
	
	<sql id="selectId">
		version_id,
		status,
		create_time,
		update_time,
		creater,
		editer,
		version_code,
		system_type,
		download_url,
		description,
		origin,
		is_must,
		MD5,
		appType,
		packagename,
		channel,
		source
	</sql>
	
	<insert id="add" parameterType="com.zed.domain.version.version.Version">
		insert into zed_version (
			version_id,
			status,
			create_time,
			update_time,
			creater,
			editer,
			version_code,
			system_type,
			download_url,
			description,
			origin,
			is_must,
			MD5,
			appType,
			packagename,
			channel,
			source
		) 
		values (
			#{versionId}, 
			#{status}, 
			#{createTime}, 
			#{updateTime}, 
			#{creater}, 
			#{editer}, 
			#{versionCode}, 
			#{systemType}, 
			#{downloadUrl}, 
			#{description}, 
			#{origin}, 
			#{isMust}, 
			#{md5}, 
			#{appType},
			#{packageName},
			#{channel},
			#{source}
		)
	</insert>
	
	<update id="update" parameterType="com.zed.domain.version.version.Version">
		update zed_version
		 <set>
			 <if test="status != null">
				status = #{status} ,
			 </if>
			 <if test="createTime != null">
				create_time = #{createTime},
			 </if>
			 <if test="updateTime != null">
				update_time = #{updateTime},
			 </if>
			 <if test="creater != null">
				creater = #{creater},
			 </if>
			 <if test="editer != null">
				editer = #{editer},
			 </if>
			 <if test="versionCode != null">
				version_code = #{versionCode},
			 </if>
			 <if test="downloadUrl != null">
				download_url = #{downloadUrl},
			 </if>
			 <if test="systemType != null">
				system_type = #{systemType},
			 </if>
			 <if test="description != null">
				description = #{description},
			 </if>
			 <if test="origin != null">
				origin = #{origin},
			 </if>
			 <if test="isMust != null">
				is_must = #{isMust},
			 </if>
			 <if test="versionCode != null">
				version_code = #{versionCode},
			 </if>
			 <if test="md5 != null">
				md5 = #{md5},
			 </if>
			 <if test="appType != null">
				appType = #{appType},
			 </if>
			 <if test="packageName != null">
				packagename = #{packageName},
			 </if>
			 <if test="channel != null">
				channel = #{channel},
			 </if>
			 <if test="source != null">
				source = #{source},
			 </if>
		 </set> 
		 where version_id = #{versionId}
		 <if test="packageName != null">
			and packagename = #{packageName}
		 </if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
	</update>
	
	<delete id="deleteVersion" parameterType="com.zed.domain.version.version.Version">
		delete from zed_version where version_id = #{versionId}
		 <if test="packageName != null">
			and packagename = #{packageName}
		 </if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
	</delete>
	
	<delete id="deleteByVersionIdAndPackageName">
		delete from zed_version where version_id = #{versionId}
		 <if test="packageName != null  and packageName !=''">
			and packagename = #{packageName}
		 </if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
	</delete>
	
	<select id="findByVersionIdAndPackageName" resultMap="Base_Result_Model">
		select 
			<include refid="selectId"/>
			from zed_version
			where version_id = #{versionId}
			 <if test="packagename != null and packagename !=''">
				and packagename = #{packagename}
			 </if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
	</select>
	
	<select id="findListByPage" resultMap="Base_Result_HashMap">
		select 
			<include refid="selectId"/>
		from zed_version
		<where>
			1=1
			<if test="packageName != null and packageName != ''">
				 and packagename like '%${packageName}%'
			</if>
			<if test="versionCode != null">
				 and version_code = #{versionCode}
			</if>
			<if test="versionId != null">
				 and version_id = #{versionId}
			</if>
			<if test="status != null">
				 and status = #{status}
			</if>
			<if test="appType != null">
				 and appType = #{appType}
			</if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
			<if test="sorting != null">
				 order by ${sorting} 
			</if>
			<if test="offset != null and limit != null">
			 	 limit #{offset},#{limit}
			</if>
		</where>
	</select>
	
	<select id="findCountByPage" resultType="Integer">
		select count(1)
		from zed_version
		<where>
			1=1
			<if test="packageName != null and packageName != ''">
				 and packagename like '%${packageName}%'
			</if>
			<if test="versionCode != null">
				 and version_code = #{versionCode}
			</if>
			<if test="versionId != null">
				 and version_id = #{versionId}
			</if>
			<if test="status != null">
				 and status = #{status}
			</if>
		 <if test="channel != null">
			and channel = #{channel}
		 </if>
			<if test="appType != null">
				 and appType = #{appType}
			</if>
		</where>
	</select>
	
	<select id="findMaxId" resultType="String">
		select count(1) from zed_version where version_id=#{versionId} and channel=#{channel} 
	</select>
		
</mapper>