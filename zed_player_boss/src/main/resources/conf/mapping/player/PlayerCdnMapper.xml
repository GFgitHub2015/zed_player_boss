<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.PlayerCdn">

	<resultMap id="Base_Result_Model" type="com.zed.domain.player.cdn.PlayerCdn">
		<id column="cdn_id" property="cdnId"/> 
		<result column="cdn_name" property="cdnName"/>	
		<result column="cdn_domain" property="cdnDomain"/>	
		<result column="cdn_status" property="cdnStatus"/>	
	</resultMap>
	
	<resultMap type="HashMap" id="Base_Result_HashMap"></resultMap>
	
	<sql id="selectId">
		cdn_id, 
		cdn_name,
		cdn_domain,
		cdn_status
	</sql>
	
	<insert id="add" parameterType="com.zed.domain.player.cdn.PlayerCdn">
		insert into zed_player_cdn (
			cdn_id, 
			cdn_name,
			cdn_domain,
			cdn_status
		) 
		values (
			#{cdnId}, 
			#{cdnName}, 
			#{cdnDomain}, 
			#{cdnStatus}
		)
	</insert>
	
	<update id="update" parameterType="com.zed.domain.player.cdn.PlayerCdn">
		update zed_player_cdn
		 set 
		 <if test="cdnName != null and cdnName != ''">
			cdn_name = #{cdnName} ,
		 </if>
		 <if test="cdnDomain != null and cdnDomain != ''">
			cdn_domain = #{cdnDomain} ,
		 </if>
		 <if test="cdnStatus != null">
			cdn_status = #{cdnStatus},
		 </if>
		 where cdn_id = #{cdnId}
	</update>
	
	<delete id="deleteById" parameterType="String">
		delete from zed_player_cdn where cdn_id in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
	
	<select id="findById" resultMap="Base_Result_Model">
		select
		<include refid="selectId"/>
		from zed_player_cdn
		where cdn_id = #{cdnId}
	</select>
	
	<select id="findAll" resultMap="Base_Result_Model">
		select
		<include refid="selectId"/>
		from zed_player_cdn
	</select>
	
	<select id="findListByPage" resultMap="Base_Result_HashMap">
		select 
			<include refid="selectId"/>
		from zed_player_cdn
		<where>
			1=1
			<if test="cdnName != null and cdnName != ''">
				 and cdn_name like '%${cdnName}%'
			</if>
			<if test="cdnStatus != null">
				 and cdn_status = #{cdnStatus}
			</if>
			<if test="sorting != null">
				 order by ${sorting} 
			</if>
			<if test="offset != null and limit != null">
			 	 limit #{offset},#{limit}
			</if>
		</where>
	</select>
	
	<select id="findCountByPage" resultType="Integer">
		select count(1)
		from zed_player_cdn
		<where>
			1=1
			<if test="cdnName != null and cdnName != ''">
				 and cdn_name like '%${cdnName}%'
			</if>
			<if test="cdnStatus != null">
				 and cdn_status = #{cdnStatus}
			</if>
		</where>
	</select>
	
	<select id="findByStatus" resultMap="Base_Result_Model">
	    select 
	    <include refid="selectId"/>
	    from zed_player_cdn where cdn_status = 1 limit 0, 1
	</select>
		
</mapper>