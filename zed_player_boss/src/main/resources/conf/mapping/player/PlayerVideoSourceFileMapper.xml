<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.PlayerVideoSourceFile">

	<resultMap id="Base_Result_Model" type="com.zed.domain.player.video.PlayerVideoSourceFile">
		<id column="file_id" property="fileId"/> 
		<result column="res_id" property="resId"/>
		<result column="file_suffix" property="fileSuffix"/>
		<result column="file_name" property="fileName"/>
		<result column="thumbnail_url" property="thumbnailUrl"/>
		<result column="file_size" property="fileSize"/>
		<result column="status" property="status"/>
		<result column="create_time" property="createTime"/>
		<result column="file_path" property="filePath"/>
	</resultMap>
	
	<resultMap type="HashMap" id="Base_Result_HashMap"></resultMap>
	
	<sql id="selectId">
		file_id,
		res_id,
		file_suffix,
		file_name,
		thumbnail_url,
		file_size,
		status,
		create_time,
		file_path
	</sql>
	
	<insert id="add" parameterType="com.zed.domain.player.video.PlayerVideoSourceFile">
		insert into zed_player_video_source_file 
		(
			file_id,
			res_id,
			file_suffix,
			file_name,
			thumbnail_url,
			file_size,
			status,
			create_time,
			file_path
		) 
		values 
		(
			#{fileId},
			#{resId},
			#{fileSuffix},
			#{fileName},
			#{thumbnailUrl},
			#{fileSize},
			#{status},
			#{createTime},
			#{filePath}
		)
	</insert>
	
	<update id="update" parameterType="com.zed.domain.player.video.PlayerVideoSourceFile">
		update zed_player_video_source_file
		 <set>
			<if test="resId != null and resId != ''">
				res_id = #{resId},
			</if>
			<if test="fileSuffix != null and fileSuffix != ''">
				file_suffix = #{fileSuffix},
			</if>
			<if test="fileName != null and fileName != ''">
				file_name = #{fileName},
			</if>
			<if test="thumbnailUrl != null and thumbnailUrl != ''">
				thumbnail_url = #{thumbnailUrl},
			</if>
			<if test="fileSize != null">
				file_size = #{fileSize},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="filePath != null and filePath != ''">
				file_path = #{filePath},
			</if>
		</set>
		 where file_id = #{fileId}
	</update>
	
	<delete id="deleteById" parameterType="String">
		delete from zed_player_video_source_file where file_id in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
	
	<select id="findById" resultMap="Base_Result_Model">
		select
			<include refid="selectId"/>
		from zed_player_video_source_file
		where file_id = #{fileId}
	</select>
	
	<select id="findAllByResId" resultMap="Base_Result_Model">
		select
			<include refid="selectId"/>
		from zed_player_video_source_file
		where res_id = #{resId} and status = 1
	</select>
	
	
	<select id="findListByPage" resultMap="Base_Result_HashMap">
		select 
			<include refid="selectId"/>
		from zed_player_video_source_file
		<where>
			1=1
			<if test="resId != null and resId != ''">
				 and res_id = #{resId}
			</if>
			<if test="fileName != null and fileName != ''">
				 and file_name like '%${fileName}%'
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="fileSuffix != null and fileSuffix != ''">
				 and file_suffix = #{fileSuffix}
			</if>
			<if test="sorting != null">
				 order by ${sorting} 
			</if>
			<if test="offset != null and limit != null">
			 	 limit #{offset},#{limit}
			</if>
		</where>
	</select>
	
	<select id="findCountByPage" resultType="Integer">
		select count(1)
		from zed_player_video_source_file
		<where>
			1=1
			<if test="resId != null and resId != ''">
				 and res_id = #{resId}
			</if>
			<if test="fileName != null and fileName != ''">
				 and file_name like '%${fileName}%'
			</if>
			<if test="status != null">
				and status = #{status}
			</if>
			<if test="fileSuffix != null and fileSuffix != ''">
				 and file_suffix = #{fileSuffix}
			</if>
		</where>
	</select>
		
	<select id="findFileSuffix" resultType="String">
		select
			file_suffix
		from zed_player_video_source_file
		group by file_suffix
	</select>
	
	<delete id="deleteByResId" parameterType="String">
		delete from zed_player_video_source_file where res_id in
		<foreach item="idItem" collection="array" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
	
	<select id="findCountByResIdWithStatus" resultType="Integer">
		select count(1)
		from zed_player_video_source_file
		where status  = #{status} 
		<if test="resIds != null">
			and res_id in
			<foreach item="idItem" collection="resIds" open="(" separator="," close=")">
				#{idItem}
			</foreach>
		</if>
	</select>
		
</mapper>